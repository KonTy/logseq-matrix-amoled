name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'  # Ensure this matches semantic-release requirements

      - name: Install dependencies
        run: npm ci  # Use npm ci to install dependencies, including dev dependencies

      - name: Set up Git
        run: |
          git config --global user.email "KonTy@github.com"
          git config --global user.name "KonTy"
      
      - name: Print repository URL
        run: |
          echo "Repository URL: https://github.com/${{ github.repository }}"
      
      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Ensure GH_TOKEN is set in GitHub secrets
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: dummy
        run: npx semantic-release --no-ci --skip-npm --dry-run

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version < package.json)" >> $GITHUB_ENV

      - name: Create ZIP file
        run: zip -r build-${{ env.VERSION }}.zip ./*

      - name: Get the release URL
        id: get_release
        run: |
          echo "Fetching release data from GitHub API"
          RELEASE_DATA=$(curl -sH "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/latest)
          echo "Release data: $RELEASE_DATA"
          UPLOAD_URL=$(echo $RELEASE_DATA | jq -r '.upload_url' | sed 's/{?name,label}//')
          echo "::set-output name=upload_url::$UPLOAD_URL"
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./build-${{ env.VERSION }}.zip
          asset_name: build-${{ env.VERSION }}.zip
          asset_content_type: application/zip
